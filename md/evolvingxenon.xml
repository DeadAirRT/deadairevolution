<?xml version="1.0" encoding="utf-8"?>
<mdscript name="EvolvingXenon" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<cue name="Init">
			<actions>
				<set_value name="$EvolvingXenonDebugChance" exact="false"/>
				<set_value name="$Xenon" exact="faction.xenon"/>
				<!-- Settings: on/off, interval 2h increments?, max level 1-5? -->
				<do_if value="(not md.$DAEXEnable?)">
					<set_value name="md.$DAEXEnable" exact="true"/>
				</do_if>
				<do_if value="(not md.$DAEXInterval?)">
					<set_value name="md.$DAEXInterval" exact="120"/>
				</do_if>
				<do_if value="(not md.$DAEXMaxLevel?)">
					<set_value name="md.$DAEXMaxLevel" exact="5"/>
				</do_if>
				<do_if value="(not $DAEXCurrentLevel?)">
					<set_value name="$DAEXCurrentLevel" exact="0"/>
				</do_if>
				<do_if value="(not $DAEXCurrentEQMods?)">
					<create_list name="$DAEXCurrentEQMods"/>
				</do_if>
				<do_if value="(not $DAEXCurrentMisEQMods?)">
					<set_value name="$DAEXCurrentMisEQMods"/>
				</do_if>
				<!-- First firing will be after 4 hours in game -->
				<do_if value="(not $DAEXLastUpgradeTime?)">
					<set_value name="$DAEXLastUpgradeTime" exact="14400"/>
				</do_if>
			</actions>
			<cues>
				<cue name="Timer" instantiate="true" checkinterval="30min" checktime="player.age + 30min">
					<conditions>
						<check_all>
							<check_value value="$Xenon.isactive"/>
							<check_value value="md.$DAEXEnable"/>
							<check_value value="$DAEXCurrentLevel lt md.$DAEXMaxLevel"/>
							<check_value value="player.age ge ($DAEXLastUpgradeTime + (md.$DAEXInterval)min)"/>
						</check_all>
					</conditions>
					<actions>
						<do_if value="$Xenon.isactive">
							<!-- Xenon is active -->
							<find_station_by_true_owner name="$XenonStations" faction="$Xenon" space="player.galaxy" canbuildships="true" checkoperational="true" multiple="true" required="true"/>
							<do_if value="$XenonStations.count" min="1">
								<!-- Xenon has an important station -->
								<do_if value="$DAEXCurrentLevel lt md.$DAEXMaxLevel">
									<include_actions ref="RaiseLevel"/>
									<include_actions ref="UpdateTimer"/>
									<do_if value="$DAEXCurrentLevel gt 0">
										<include_actions ref="SetEqMods"/>
									</do_if>
								</do_if>
								<do_else>
									<debug_text text="'MOD: DeadAirEvolution -- %1 -- Xenon are max level, skipping level up.'.[player.age]" context="false" filter="scripts" chance="if @$EvolvingXenonDebugChance then ($EvolvingXenonDebugChance * 100) else 0"/>
								</do_else>
							</do_if>
							<do_else>
								<debug_text text="'MOD: DeadAirEvolution -- %1 -- Xenon have no stations.'.[player.age]" context="false" filter="scripts" chance="if @$EvolvingXenonDebugChance then ($EvolvingXenonDebugChance * 100) else 0"/>
							</do_else>
						</do_if>
						<do_else>
							<debug_text text="'MOD: DeadAirEvolution -- %1 -- ERROR: Xenon are not active.'.[player.age]" context="false" filter="error" chance="if @$EvolvingXenonDebugChance then ($EvolvingXenonDebugChance * 100) else 0"/>
						</do_else>
					</actions>
				</cue>
				<cue name="UpdateOnLoad" instantiate="true">
					<conditions>
						<event_universe_generated/>
						<check_value value="md.$DAEXEnable"/>
						<check_value value="$DAEXCurrentLevel gt 0"/>
						<check_value value="$Xenon.isactive"/>
					</conditions>
					<actions>
						<!-- Double check EQ mods -->
						<include_actions ref="SetEqMods"/>
					</actions>
				</cue>
				<library name="RaiseLevel">
					<actions>
						<set_value name="$DAEXCurrentLevel" exact="1" operation="add"/>
						<debug_text text="'MOD: DeadAirEvolution -- %1 -- Xenon level raised to %2'.[player.age,$DAEXCurrentLevel]" context="false" filter="scripts" chance="if @$EvolvingXenonDebugChance then ($EvolvingXenonDebugChance * 100) else 0"/>
					</actions>
				</library>
				<library name="SetEqMods">
					<actions>
						<do_if value="$DAEXCurrentLevel ge 0">
							<!-- $DAEXCurrentEQMods {1}Engine {2}Ship {3}Shield {4}Weapon -->
							<do_if value="$DAEXCurrentLevel == 1">
								<set_value name="$DAEXCurrentEQMods" exact="[ware.mod_engine_xenon_1_da,ware.mod_ship_xenon_1_da,ware.mod_shield_xenon_1_da,ware.mod_weapon_xenon_1_da]"/>
								<set_value name="$DAEXCurrentMisEQMods" exact="ware.mod_weapon_xenon_missile_1_da"/>
								<set_value name="$DAEXCurrentEcoEQMods" exact="ware.mod_ship_xenon_eco_1_da"/>
							</do_if>
							<do_elseif value="$DAEXCurrentLevel == 2">
								<set_value name="$DAEXCurrentEQMods" exact="[ware.mod_engine_xenon_2_da,ware.mod_ship_xenon_2_da,ware.mod_shield_xenon_2_da,ware.mod_weapon_xenon_2_da]"/>
								<set_value name="$DAEXCurrentMisEQMods" exact="ware.mod_weapon_xenon_missile_2_da"/>
								<set_value name="$DAEXCurrentEcoEQMods" exact="ware.mod_ship_xenon_eco_2_da"/>
							</do_elseif>
							<do_elseif value="$DAEXCurrentLevel == 3">
								<set_value name="$DAEXCurrentEQMods" exact="[ware.mod_engine_xenon_3_da,ware.mod_ship_xenon_3_da,ware.mod_shield_xenon_3_da,ware.mod_weapon_xenon_3_da]"/>
								<set_value name="$DAEXCurrentMisEQMods" exact="ware.mod_weapon_xenon_missile_3_da"/>
								<set_value name="$DAEXCurrentEcoEQMods" exact="ware.mod_ship_xenon_eco_3_da"/>
							</do_elseif>
							<do_elseif value="$DAEXCurrentLevel == 4">
								<set_value name="$DAEXCurrentEQMods" exact="[ware.mod_engine_xenon_4_da,ware.mod_ship_xenon_4_da,ware.mod_shield_xenon_4_da,ware.mod_weapon_xenon_4_da]"/>
								<set_value name="$DAEXCurrentMisEQMods" exact="ware.mod_weapon_xenon_missile_4_da"/>
								<set_value name="$DAEXCurrentEcoEQMods" exact="ware.mod_ship_xenon_eco_4_da"/>
							</do_elseif>
							<do_elseif value="$DAEXCurrentLevel == 5">
								<set_value name="$DAEXCurrentEQMods" exact="[ware.mod_engine_xenon_5_da,ware.mod_ship_xenon_5_da,ware.mod_shield_xenon_5_da,ware.mod_weapon_xenon_5_da]"/>
								<set_value name="$DAEXCurrentMisEQMods" exact="ware.mod_weapon_xenon_missile_5_da"/>
								<set_value name="$DAEXCurrentEcoEQMods" exact="ware.mod_ship_xenon_eco_5_da"/>
							</do_elseif>
						</do_if>
						<do_else>
							<debug_text text="'MOD: DeadAirEvolution -- %1 -- ERROR: $DAEXCurrentLevel %2.'.[player.age,$DAEXCurrentLevel]" context="false" filter="error" chance="if @$EvolvingXenonDebugChance then ($EvolvingXenonDebugChance * 100) else 0"/>
						</do_else>
					</actions>
				</library>
				<library name="UpdateTimer">
					<actions>
						<do_if value="md.$DAEXEnable">
							<set_value name="$DAEXLastUpgradeTime" exact="player.age"/>
						</do_if>
					</actions>
				</library>
				<cue name="UpgradeShip" instantiate="true">
					<conditions>
						<event_job_ship_activated/>
						<check_value value="event.param.trueowner == $Xenon"/>
						<check_value value="md.$DAEXEnable"/>
						<check_value value="$DAEXCurrentLevel gt 0"/>
						<check_value value="$Xenon.isactive"/>
						<check_value value="$DAEXCurrentEQMods.count == 4"/>
					</conditions>
					<actions>
						<set_value name="$EvolvingXenonDebugChance" exact="false"/>
						<!-- Using DAFill Code -->
						<set_value name="$WeaponGroupTags" exact="[]"/>
						<set_value name="$WeaponMacros" exact="[]"/>
						<!-- Apply EQ mods -->
						<set_value name="$DebugString" exact="'Ship: ' + event.param.macro"/>
						<set_value name="$DebugString" exact="' Mods: '" operation="add"/>
						<!-- Engine mods work with simple method -->
						<add_equipment_mods object="event.param">
							<engine ware="$DAEXCurrentEQMods.{1}"/>
						</add_equipment_mods>
						<set_value name="$DebugString" exact="$DAEXCurrentEQMods.{1}.id" operation="add"/>
						<!-- Ship mods work with simple method -->
						<do_if value="(event.param.primarypurpose == purpose.trade) or (event.param.primarypurpose == purpose.mine)">
							<add_equipment_mods object="event.param">
								<ship ware="$DAEXCurrentEcoEQMods"/>
							</add_equipment_mods>
							<set_value name="$DebugString" exact="', ' + $DAEXCurrentEcoEQMods.id" operation="add"/>
						</do_if>
						<do_else>
							<add_equipment_mods object="event.param">
								<ship ware="$DAEXCurrentEQMods.{2}"/>
							</add_equipment_mods>
							<set_value name="$DebugString" exact="', ' + $DAEXCurrentEQMods.{2}.id" operation="add"/>
						</do_else>
						<!-- Shield mods mostly work with simple method -->
						<add_equipment_mods object="event.param">
							<shield ware="$DAEXCurrentEQMods.{3}"/>
						</add_equipment_mods>
						<set_value name="$DebugString" exact="', ' + $DAEXCurrentEQMods.{3}.id" operation="add"/>
						<!-- Have to use complicated method for weapons/turrets on L/XL-->
						<do_for_each in="event.param.weapons.all.list" name="$Weapon">
							<do_if value="$Weapon.grouptag and (not $WeaponGroupTags.indexof.{$Weapon.grouptag})">
								<do_if value="$Weapon.isclass.[class.missileturret,class.missilelauncher]">
									<add_equipment_mods object="event.param">
										<weapon ware="$DAEXCurrentMisEQMods" context="'..'" group="$Weapon.grouptag"/>
									</add_equipment_mods>
									<append_to_list name="$WeaponGroupTags" exact="$Weapon.grouptag"/>
									<set_value name="$DebugString" exact="', ' + $DAEXCurrentMisEQMods.id + '/' + $Weapon.grouptag" operation="add"/>
								</do_if>
								<do_else>
									<add_equipment_mods object="event.param">
										<weapon ware="$DAEXCurrentEQMods.{4}" context="'..'" group="$Weapon.grouptag"/>
									</add_equipment_mods>
									<append_to_list name="$WeaponGroupTags" exact="$Weapon.grouptag"/>
									<set_value name="$DebugString" exact="', ' + $DAEXCurrentEQMods.{4}.id + '/' + $Weapon.grouptag" operation="add"/>
								</do_else>
							</do_if>
							<do_elseif value="($Weapon.macro) and (not $WeaponMacros.indexof.{$Weapon.macro}) and (not $WeaponGroupTags.indexof.{$Weapon.grouptag})">
								<do_if value="$Weapon.isclass.[class.missileturret,class.missilelauncher]">
									<add_equipment_mods object="event.param">
										<weapon ware="$DAEXCurrentMisEQMods" macro="$Weapon.macro"/>
									</add_equipment_mods>
									<append_to_list name="$WeaponMacros" exact="$Weapon.macro"/>
									<set_value name="$DebugString" exact="', ' + $DAEXCurrentMisEQMods.id + '/' + $Weapon.macro" operation="add"/>
								</do_if>
								<do_elseif value="not (@$Weapon.hasweaponmod == null)">
									<add_equipment_mods object="event.param">
										<weapon ware="$DAEXCurrentEQMods.{4}" macro="$Weapon.macro"/>
									</add_equipment_mods>
									<append_to_list name="$WeaponMacros" exact="$Weapon.macro"/>
									<set_value name="$DebugString" exact="', ' + $DAEXCurrentEQMods.{4}.id + '/' + $Weapon.macro" operation="add"/>
								</do_elseif>
							</do_elseif>
						</do_for_each>
						<set_value name="$DebugString" exact="'.'" operation="add"/>
						<debug_text text="'MOD: DeadAirEvolution -- %1 -- Added EQ Mods -- %2'.[player.age,$DebugString]" context="false" filter="scripts" chance="if @$EvolvingXenonDebugChance then ($EvolvingXenonDebugChance * 5) else 0"/>
						<remove_value name="$DebugString"/>
						<remove_value name="$Weapon"/>
						<remove_value name="$WeaponGroupTags"/>
						<remove_value name="$WeaponMacros"/>
					</actions>
				</cue>
				<!-- TODO Configuration -->
			</cues>
		</cue>
	</cues>
</mdscript>
